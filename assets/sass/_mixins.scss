// CSS Grid
@mixin display-grid {
    display: -ms-grid;
    display: grid;
}

// $columns values should be delimited by a space
@mixin grid-template-columns($columns...) {
	-ms-grid-columns: $columns;
	grid-template-columns: $columns;
}

// $rows values should be delimited by a space
@mixin grid-template-rows($rows...) {
	-ms-grid-rows: $rows;
	grid-template-rows: $rows;
}

// Can be used in combination with above grid-template-X mixins.
// These result in the same output:
// @include grid-template-columns(10px grid-repeat(4, 20px) 30px);
// @include grid-template-columns(10px 20px 20px 20px 20px 30px);
@function grid-repeat($repeat, $stuff: 1fr) {
	$list: ();
	@for $i from 1 through $repeat {
		$list: append($list, $stuff, space);
	}
	@return $list;
}

@mixin grid-column($col-start, $col-end) {
	-ms-grid-column: $col-start;
	-ms-grid-column-span: $col-end - $col-start;
	grid-column: #{$col-start} / #{$col-end};
}

@mixin grid-row($row-start, $row-end) {
	-ms-grid-row: $row-start;
	-ms-grid-row-span: $row-end - $row-start;
	grid-row: #{$row-start} / #{$row-end};
}

@mixin grid-align-self($value) {
	-ms-grid-row-align: $value;
	align-self: $value;
}

@mixin grid-justify-self($value) {
	-ms-grid-column-align: $value;
	justify-self: $value;
}

// Flexbox
@mixin flex {
	display: -webkit-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
}

@mixin flex-container {
	display: table;
	width: 100%;
	@include flex;

	@include media(lt) {
		display: table;
		@include clearfix;
	}

	@media screen\0 {
		display: table;
		@include clearfix;
	}
}

@mixin flex-item {
	display: table-cell;
	@include flex;

	@media screen\9 {
		display: table-cell;
		@include clearfix;
	}

	@media screen\0 {
		display: table-cell;
		@include clearfix;
	}
}

@mixin flex-grow ($size) {
	@supports not (display: flex) {
		width: $size'%';
	}
	flex-grow: $size;
}

@mixin flex-left {
	-webkit-box-pack: start;
	-webkit-justify-content: flex-start;
		-ms-flex-pack: start;
			justify-content: flex-start;

	@media screen\9 {
		float: left;
	}

	@media screen\0 {
		float: left;
	}
}

@mixin flex-center {
	-webkit-box-pack: center;
	-webkit-justify-content: center;
		-ms-flex-pack: center;
			justify-content: center;
}

@mixin flex-right {
	-webkit-box-pack: end;
	-webkit-justify-content: flex-end;
		-ms-flex-pack: end;
			justify-content: flex-end;

	@media screen\9 {
		float: right;
	}

	@media screen\0 {
		float: right;
	}
}

@mixin flex-top {
	-webkit-box-align: start;
	-webkit-align-items: flex-start;
		-ms-flex-align: start;
			align-items: flex-start;
}

@mixin flex-middle {
	vertical-align: middle;
	-webkit-box-align: center;
	-webkit-align-items: center;
		-ms-flex-align: center;
			align-items: center;
}

@mixin flex-bottom {
	-webkit-box-align: end;
	-webkit-align-items: flex-end;
		-ms-flex-align: end;
			align-items: flex-end;
}

@mixin flex-stretch {
	-webkit-box-align: stretch;
	-webkit-align-items: stretch;
		-ms-flex-align: stretch;
			align-items: stretch;
}

@mixin flex-around {
	-webkit-justify-content: space-around;
		-ms-flex-pack: distribute;
			justify-content: space-around;
}

@mixin flex-between {
	-webkit-box-pack: justify;
	-webkit-justify-content: space-between;
		-ms-flex-pack: justify;
			justify-content: space-between;
}

@mixin flex-wrap {
	-webkit-flex-wrap: wrap;
		-ms-flex-wrap: wrap;
			flex-wrap: wrap;
}

@mixin flex-col {
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-webkit-flex-direction: column;
		-ms-flex-direction: column;
			flex-direction: column;
}

@mixin flex-row {
	-webkit-box-orient: horizontal;
	-webkit-box-direction: normal;
	-webkit-flex-direction: row;
		-ms-flex-direction: row;
			flex-direction: row;
}

@mixin flex-col-rev {
	-webkit-box-orient: vertical;
	-webkit-box-direction: reverse;
	-webkit-flex-direction: column-reverse;
		-ms-flex-direction: column-reverse;
			flex-direction: column-reverse;
}

@mixin flex-row-rev {
	-webkit-box-orient: horizontal;
	-webkit-box-direction: reverse;
	-webkit-flex-direction: row-reverse;
		-ms-flex-direction: row-reverse;
			flex-direction: row-reverse;
}

@mixin absolute_center {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

@mixin absolute_center_unset {
	position: relative;
	transform: none;
	top: 0;
	left: 0;
}

// Responsive
@mixin media( $res ) {
	@if mobile == $res {
		@media only screen and (min-width: $width__mobile) {
			@content;
		}
	}

	@if tablet == $res {
		@media only screen and (min-width: $width__tablet) {
			@content;
		}
	}

	@if desktop == $res {
		@media only screen and (min-width: $width__desktop) {
			@content;
		}
	}

	@if wide == $res {
		@media only screen and (min-width: $width__wide) {
			@content;
		}
	}
}

// Transitions
@mixin basic-transition {
	transition: all ease .4s;
}

@mixin element-transition($elements...) {
	transition-property: $elements;
	transition-timing-function: ease;
	transition-duration: .4s;
}

// Misc.
@mixin screen-reader-text {
	border: 0;
    clip: rect(1px,1px,1px,1px);
    -webkit-clip-path: inset(50%);
    clip-path: inset(50%);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute!important;
    width: 1px;
    word-wrap: normal!important;
}